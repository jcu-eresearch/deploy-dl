upstream vecnet {
    server unix:/tmp/vecnet.sock.0;
}
upstream disadis {
    server 127.0.0.1:4000;
}
upstream discovery {
    server 127.0.0.1:5000;
}
server {
    listen 80 default_server;
    server_name {{ domain }};

{% if use_ssl %}
    location / {
        return 301 https://{{ domain }}$request_uri;
    }
}
server {
    listen 443 ssl default_server deferred;
    server_name {{ domain }};
    ssl_certificate      /etc/nginx/20140403.vecnet.org.crt;
    ssl_certificate_key  /etc/nginx/20140403.vecnet.org.key;
    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  10m;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
{% endif %}

    client_max_body_size 1G;

    # static files

    root    /opt/www;
    location ^~ /assets/ {
        gzip on;
        gzip_static on;
        expires 1y;
        add_header Cache-Control public;
        add_header ETag "";
        try_files /assets-discovery/$uri /assets-vecnet/$uri $uri;
        break;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    location ^~ /downloads/ {
        proxy_intercept_errors on;
        error_page 401 403 404 500 = @backend;
        proxy_redirect off;
        proxy_buffering off;
        proxy_pass http://disadis/;
    }

    try_files $uri @app;

    location @app {
        proxy_intercept_errors on;
        error_page 404 = @backend;
        proxy_redirect off;
        proxy_pass http://discovery;
    }

    location @backend {
        proxy_redirect off;
        proxy_pass http://vecnet;
    }
}
