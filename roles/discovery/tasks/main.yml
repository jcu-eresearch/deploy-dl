---
# this is mostly identical to the "vecnet" role, which deploys the backend application
- name: make app user
  user: name=app

- name: install packages
  yum: >
    name={{ item }}
    state=present
  with_items:
    - postgresql-devel

- name: install bundler
  shell: su app -c "source /etc/profile.d/chruby.sh && chruby {{ ruby_version }} && gem install bundler"
    chdir=/home/app
    creates=/home/app/.gem/ruby/2.0.0/bin/bundle
  # TODO: does this creates path depends on the ruby version? how to strip the patch level off the ruby_version?

# capistrano-like directory layout
# But not perfect, since the capistrano way is not idempotent
#
# This way isn't perfect either since the git checkout could return
# different things each time...is this a difference between
# provisioning and deploying?

- name: setup application directory layout
  file: >
    path={{ discovery_deploy_root }}/{{ item }}
    state=directory
    owner=app
    group=app
    mode=755
  with_items:
    - releases
    - shared
    - shared/bundle
    - shared/config
    - shared/log
    - shared/pids
    - shared/system

- name: check out code
  git: >
    repo="https://github.com/vecnet/dl-discovery.git"
    dest={{ discovery_deploy_root }}/shared/cached-copy
    force=yes
    recursive=no
    version={{ discovery_branch|d('master') }}

- name: HEAD ref
  command: git rev-parse --verify HEAD
    chdir={{ discovery_deploy_root }}/shared/cached-copy
  register: head_ref

- name: See if directory exists
  command: ls {{ discovery_deploy_root }}/releases/{{ head_ref.stdout }}
  register: deploy_exists
  ignore_errors: yes

- name: Do deployment
  include: deploy.yml
  when: deploy_exists.rc != 0
  vars:
    release_dir: "{{ discovery_deploy_root }}/releases/{{ head_ref.stdout }}"

- name: Fix permissions
  file: >
    path={{ discovery_deploy_root }}
    state=directory
    owner=app
    group=app
    mode=755
    recurse=yes

- name: link current directory
  file: >
    src={{ discovery_deploy_root }}/releases/{{ head_ref.stdout }}
    path={{ discovery_deploy_root }}/current
    state=link

- name: restart unicorn
  command: su app -c "{{ discovery_deploy_root }}/current/script/reload-unicorn.sh"


- name: install log rotate
  template: >
    src=logrotate.j2
    dest=/etc/logrotate.d/vecnet
    owner=root
    group=root
    mode=644

# init.d
# run as root
#sudo cp devops/etc/init.d/* /etc/init.d
#sudo chkconfig --add vecnet-server
#sudo chkconfig vecnet-server on

